# ===========================================
# DATABASE CONFIGURATION
# ===========================================
# H2 Database (Development)
spring.datasource.url=jdbc:h2:mem:librarydb
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# H2 Console (for development)
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.h2.console.settings.web-allow-others=true

# PostgreSQL (Production - commented out)
# spring.datasource.url=jdbc:postgresql://localhost:5432/crudjava
# spring.datasource.username=postgres
# spring.datasource.password=123456
# spring.datasource.driver-class-name=org.postgresql.Driver

# ===========================================
# JPA CONFIGURATION
# ===========================================
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always

# ===========================================
# SERVER CONFIGURATION
# ===========================================
server.port=8080
server.servlet.context-path=/
server.error.include-message=always
server.error.include-binding-errors=always

# ===========================================
# FILE UPLOAD CONFIGURATION
# ===========================================
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
spring.servlet.multipart.file-size-threshold=2KB

# File storage paths
app.upload.dir=uploads/
app.upload.covers-dir=${app.upload.dir}covers/
app.upload.profiles-dir=${app.upload.dir}profiles/

# ===========================================
# STATIC RESOURCES CONFIGURATION
# ===========================================
spring.web.resources.static-locations=classpath:/static/,file:uploads/
spring.mvc.static-path-pattern=/static/**

# ===========================================
# SECURITY & JWT CONFIGURATION
# ===========================================
app.jwt.secret=mySecretKey123456789012345678901234567890123456789012345678901234567890
app.jwt.expiration-ms=86400000

# ===========================================
# CORS CONFIGURATION
# ===========================================
app.cors.allowed-origins=http://localhost:3000,http://localhost:5173,http://localhost:8080
app.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
app.cors.allowed-headers=*
app.cors.exposed-headers=Authorization
app.cors.allow-credentials=true
app.cors.max-age=3600

# ===========================================
# THYMELEAF CONFIGURATION
# ===========================================
spring.thymeleaf.cache=false
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.mode=HTML

# ===========================================
# LOGGING CONFIGURATION
# ===========================================
logging.level.org.example.library=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# ===========================================
# ACTUATOR CONFIGURATION
# ===========================================
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
management.info.env.enabled=true

# ===========================================
# APPLICATION INFO
# ===========================================
info.app.name=Sistema de Biblioteca
info.app.description=Sistema completo de gerenciamento de biblioteca
info.app.version=2.0.0
info.app.encoding=UTF-8
info.app.java.version=${java.version}

# Ensure routing does not capture static asset files for SPA
spring.mvc.pathmatch.matching-strategy=ant_path_matcher
